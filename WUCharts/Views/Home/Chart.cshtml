@{
    ViewData["Title"] = "Temperature 27/05/2019";
}
<h2>@ViewData["Title"]</h2>

@*<p><img src="@Html.Raw(ViewData[" ChartImage"])" /></p>*@
<head>
    <link rel="stylesheet" href="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css">
    <script src="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"></script>
</head>
<div class="ct-chart ct-perfect-fourth"></div>
<script>
    //fetch('https://localhost:44350/api/data')
    //    .then(function (response) {
    //        return response.json();
    //    })
    //    .then(function (users) {
    //        var data = {
    //            labels: users.map(function (user) {
    //                return user.name;
    //            }),
    //            series: users.map(function (user) {
    //                return user.name.length;
    //            })
    //        };

    //        var chart = new Chartist.Bar('#chart', data, {
    //            distributeSeries: true
    //        });
    //    });
    var data = {
        // A labels array that can contain any sort of values
        labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
        // Our series array that contains series objects or in this case series data arrays
        series: [
            [8, 18, 17, 14, 9]
        ]
    };

    // Create a new line chart object where as first parameter we pass in a selector
    // that is resolving to our chart container element. The Second parameter
    // is the actual data object. As a third parameter we pass in our custom options.
    new Chartist.Line('.ct-chart', data);
</script>

