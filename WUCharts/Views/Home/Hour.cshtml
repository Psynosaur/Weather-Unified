@using Newtonsoft.Json
@model List<WURequest.Models.Observations>
@{
    var cnt = Model.Select(x => true).Count();
    var latest = Model.Last();
    
    var windObj = new
    {
        currWind = latest.WindSpeedCur * 3.6,
        currGust = latest.WindGust10 * 3.6,
        maxWind = Model.Select(x => x.WindSpeedCur).ToList().Max() * 3.6,
        minWind = Model.Select(x => x.WindSpeedCur).ToList().Min() * 3.6,
        avgWind = Model.Select(x => x.WindSpeedCur).ToList().Average() * 3.6,
        maxGust = Model.Select(x => x.WindGust10).ToList().Max() * 3.6,
        minGust = Model.Select(x => x.WindGust10).ToList().Min() * 3.6,
        avgGust = Model.Select(x => x.WindGust10).ToList().Average() * 3.6,
    };

    var statsObj = new
    {
        maxTemp = Model.Select(x => x.TempOutCur).ToList().Max(),
        minTemp = Model.Select(x => x.TempOutCur).ToList().Min(),
        maxHum = Model.Select(x => x.HumOutCur).ToList().Max(),
        minHum = Model.Select(x => x.HumOutCur).ToList().Min(),
        maxDew = Model.Select(x => x.DewCur).ToList().Max(),
        minDew = Model.Select(x => x.DewCur).ToList().Min(),
        maxRain = Model.Select(x => x.RainDay).ToList().Max(),
        minRain = Model.Select(x => x.RainDay).ToList().Min(),
        avgTemp = Model.Select(x => x.TempOutCur).ToList().Average(),
        avgHum = Model.Select(x => x.HumOutCur).ToList().Average(),
        avgDew = Model.Select(x => x.DewCur).ToList().Average(),
        avgRain = Model.Select(x => x.RainDay).ToList().Average(),
        maxSolar = Model.Select(x => x.SolarRad).ToList().Max(),
        minSolar = Model.Select(x => x.SolarRad).ToList().Min(),
        avgSolar = Model.Select(x => x.SolarRad).ToList().Average(),
        avgWDir = Model.Select(x => x.WindDirAvg10).ToList().Average()
    };
    string niks = "--";
    // Sets nth record to use for plotting
    int nStep = 1;
    var graph = Model
        .Select(c =>{
                        c.WindSpeedCur *= 3.6;
                        c.WindGust10 *= 3.6; 
                        return c;
        });
   
    var rainHour = Model.Any() ? Model.Select(x => x.RainDay).Last() - Model.Select(x => x.RainDay).First() : 0;
    //ViewData["Title"] = "Temp Past Hour : " + DateTime.Now.ToString("f");
}

<div class="containerx col-lg-12 ">

    <h2>Daily Stats</h2>

    <div class="col-lg-4 col-sm-4">
        <strong>Date Time :</strong> @latest.ObsTime.ToLocalTime().ToString("ddd  dd MMM yyyy - HH:mm:s tt zzz")

        <table>
            <tr>
                <th>
                    <strong>Outdoor</strong>
                </th>
            </tr>
            <tr>
                <td>Current Temp</td>
                <td>@latest.TempOutCur&#176</td>
            </tr>
            <tr>
                <td>Temp Min</td>
                <td>@latest.Tmin&#176</td>
            </tr>
            <tr>
                <td>Temp Max</td>
                <td>@latest.Tmax&#176</td>
            </tr>
            <tr>
                <td>Humidity</td>
                <td>@latest.HumOutCur%</td>
            </tr>
            <tr>
                <td>Dew Point</td>
                <td>@latest.DewCur&#176</td>
            </tr>
            <tr>
                <th>
                    <strong>Indoor</strong>
                </th>
            </tr>
            <tr>
                <td>Current Temp</td>
                <td>@latest.TempInCur&#176</td>
            </tr>
            <tr>
                <td>Humidity</td>
                <td>@latest.HumInCur%</td>
            </tr>
            <tr>
                <td>Pressure</td>
                <td>@latest.PressCur hPa</td>
            </tr>

        </table>
    </div>

    <div class="col-lg-4 col-sm-4">


        <table>
            <tr>
                <th>
                    <strong>Wind Direction</strong>
                </th>
            </tr>
            <tr>
                <td>Wind Direction</td>
                <td>@latest.WindDirCur&#176</td>
            </tr>
            <tr>
                <td>Wind Direction</td>
                <td>@latest.WindDirCurEng</td>
            </tr>
            <tr>
                <td>Wind Dir Avg</td>
                <td>@latest.WindDirAvg10Eng</td>
            </tr>
            <tr>
                <td>Wind Chill</td>
                <td>@latest.WindChillCur&#176</td>
            </tr>
            <tr>
                <td>Wind Dir Avg</td>
                <td>@latest.WindDirAvg10&#176</td>
            </tr>
            <tr>
                <th>
                    <strong>Wind Speed</strong>
                </th>
            </tr>
            <tr>
                <td>Wind Current</td>
                <td>@latest.WindSpeedCur m/s / @windObj.currWind.ToString("#.00") km/h</td>

            </tr>
            <tr>
                <td>Wind Average</td>
                <td>@latest.WindAvgSpeedCur m/s / @windObj.avgWind.ToString("#.00") km/h</td>
            </tr>
            <tr>
                <td>Wind Gust</td>
                <td>@latest.WindGust10 m/s / @windObj.currGust.ToString("#.00") km/h</td>
            </tr>

        </table>
    </div>
    <div class="col-lg-4 col-sm-4">


        <table>
            <tr>
                <th>
                    <strong>Rain</strong>
                </th>
            </tr>
            <tr>
                <td>Rain Rate</td>
                <td>@latest.RainRateCur mm/h</td>
            </tr>
            <tr>
                <td>RainTotal Day</td>
                <td>@latest.RainDay mm</td>
            </tr>
            <tr>
                <td>RainTotal Yesterday</td>
                <td>@latest.RainYest mm</td>
            </tr>
            <tr>
                <td>RainTotal Month</td>
                <td>@latest.RainMonth mm</td>
            </tr>
            <tr>
                <td>RainTotal Year</td>
                <td>@latest.RainYear mm</td>
            </tr>
            <tr>
                <th>
                    <strong>Solar</strong>
                </th>
            </tr>
            <tr>
                <td>Solar Radiation</td>
                <td>@latest.SolarRad W/m²</td>
            </tr>
            <tr>
                <td>UV index</td>
                <td>@latest.UV</td>
            </tr>
        </table>
    </div>
    


</div>

<div class="pew col-lg-12 col-sm-12">
    @if (cnt > 0)
    {
        <div class="col-lg-6" id="chartemp" style="height:300px;"></div>
        <div class="col-lg-6" id="chartminmax" style="height:300px;"></div>
        <div class="col-lg-6" id="charthum" style="height:300px;"></div>
        <div class="col-lg-6" id="chartpressure" style="height:300px;"></div>
        <div class="col-lg-6" id="chartwind" style="height:300px;"></div>
        <div class="col-lg-6" id="chartrain" style="height:300px;"></div>
        <div class="col-lg-6" id="chartsolar" style="height:300px;"></div>
        <div class="col-lg-6" id="chartuv" style="height:300px;"></div>
        <div class="col-lg-12" id="chartwd" style="height:300px;"></div>
    }

</div>
@cnt total records

<script src="//www.amcharts.com/lib/4/core.js"></script>
<script src="//www.amcharts.com/lib/4/charts.js"></script>
<script src="https://www.amcharts.com/lib/4/themes/dark.js"></script>
<script type="text/javascript">
    var hrs = 0;
    var modeldata = @Html.Raw(JsonConvert.SerializeObject(graph));
</script>
<script type="text/javascript" src="~/js/amcharts.js"></script>