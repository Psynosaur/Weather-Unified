@model WURequest.Models.Forecasts
@using System.Security.Permissions
@using MongoDB.Bson
@using NUglify.Helpers

@{
    var i = 0;
}

@section Scripts
{
    <script>
        var hrs = 3;
    </script>
}

@* <br> *@
@* <h2> last updated  @DateTime.Parse(Model.ValidTimeLocal[0]).AddHours(-1)</h2> *@
<br/>
<div class="columns is-0-mobile has-text-light">

    @foreach (var day in Model.DayOfWeek)
    {
        var rain = Model.Daypart[0].Qpf[i + i + 1] + @Model.Daypart[0].Qpf[i + i];
        // Daytime stats should not display when it has passed(after 3pm) and data is 'null'
        <div class="column" id="weatherbox">
            <div class="box has-background-grey-darker has-text-light">
                <div class="columns is-mobile">
                    <div class="column" id="RiseAndSet">
                        <h3 class="has-tooltip-arrow has-text-link-dark" data-tooltip="Temp min">@Model.TemperatureMin[i]°C</h3>
                    </div>
                    <div class="column" id="RiseAndSet">
                        <h1>@day</h1>
                    </div>
                    <div class="column" id="RiseAndSet">
                        @if (Model.TemperatureMax[i] == null)
                        {
                            // After 3pm we do not get the value for TemperatureMax anymore
                            <h3 class="has-tooltip-arrow has-text-danger-dark" data-tooltip="Temp max">@Model.Daypart[0].TemperatureHeatIndex[i + i + 1]°C</h3>
                        }
                        else
                        {
                            <h3 class="has-tooltip-arrow has-text-danger-dark" data-tooltip="Temp max">@Model.TemperatureMax[i]°C</h3>
                        }

                    </div>
                </div>

                <div class="columns is-mobile">
                    <div class="column" id="RiseAndSet">
                        <span class="has-tooltip-arrow" data-tooltip="Sunrise">@DateTime.Parse(Model.SunriseTimeLocal[i]).ToString("HH:mm")</span>
                    </div>
                     @if (rain > 0)
                     {
                         <div class="column" id="forecastTemp">
                             <h3 class="has-tooltip-arrow has-text-primary-light" data-tooltip="Expected rainfall">@rain mm</h3>
                         </div>
                     }
                    <div class="column" id="RiseAndSet">
                        <span class="has-tooltip-arrow" data-tooltip="Sunset">@DateTime.Parse(Model.SunsetTimeLocal[i]).ToString("HH:mm")</span>
                    </div>
                </div>

                @* <div id="narrative"> *@
                @*     @Model.Narrative[i] *@
                @* </div> *@


                @* Day - conditional since after 3pm we don't get any values for the day forecast anymore*@
                @if (Model.Daypart[0].RelativeHumidity[i + i] > 0)
                {
                    <hr/>
                    <h2 class="subtitle has-text-light" style="text-align: center!important">Daytime</h2>
                    <div class="image-container">
                        <img src="img/Weather Icons - 200x200_SVGs/SVGs/@(Model.Daypart[0].IconCode[i + i]).svg" alt=""/>
                    </div>
                    <br/>
                    <div id="narrative">
                        @Model.Daypart[0].Narrative[i + i]
                    </div>
                    <br/>
                    <div class="columns is-mobile">
                        <div class="column is-half">
                            <span>
                                Temp : @Model.Daypart[0].Temperature[i + i]°C
                            </span>
                            <br/>
                            <span>
                                Hum : @Model.Daypart[0].RelativeHumidity[i + i] %
                            </span>
                        </div>
                        <div class="column is-half">
                            <span class="has-tooltip-arrow" data-tooltip="Precipitation chance">
                                Precip. @Model.Daypart[0].PrecipChance[i + i] %
                            </span>
                            <br/>
                            <span class="has-tooltip-arrow" data-tooltip="Cloud cover for this period">
                                Clouds : @Model.Daypart[0].CloudCover[i + i] %
                            </span>
                            <br/>
                            @* @if (Model.Daypart[0].Qpf[i + i] > 0) *@
                            @* { *@
                            @*     <span class="has-tooltip-arrow" data-tooltip="Expected amount of rain">@Model.Daypart[0].Qpf[i + i] mm</span> *@
                            @* } *@
                        </div>
                    </div>
                }

                @* Night *@
                <hr/>
                <h2 class="subtitle has-text-light">Nighttime</h2>
                <div class="image-container">
                    <img src="img/Weather Icons - 200x200_SVGs/SVGs/@(Model.Daypart[0].IconCode[i + i + 1]).svg" alt=""/>

                </div>
                <br/>
                <div id="narrative">
                    @Model.Daypart[0].Narrative[i + i + 1]
                </div>
                <br/>
                <div class="columns is-mobile">
                    <div class="column is-half">
                        <span>
                            Temp : @Model.Daypart[0].Temperature[i + i + 1]°C
                        </span>
                        <br/>
                        <span>
                            Hum : @Model.Daypart[0].RelativeHumidity[i + i + 1] %
                        </span>
                    </div>
                    <div class="column is-half">
                        <span class="has-tooltip-arrow" data-tooltip="Precipitation chance">
                            Precip. @Model.Daypart[0].PrecipChance[i + i + 1] %
                        </span>
                        <br/>
                        <span class="has-tooltip-arrow" data-tooltip="Cloud cover for this period">
                            Clouds : @Model.Daypart[0].CloudCover[i + i + 1] %
                        </span>
                        <br/>
                        @* @if (Model.Daypart[0].Qpf[i + i + 1] > 0) *@
                        @* { *@
                        @*     <span class="has-tooltip-arrow" data-tooltip="Expected amount of rain">@Model.Daypart[0].Qpf[i + i + 1] mm</span> *@
                        @* } *@
                    </div>
                </div>
                <hr/>
                <h2 class="subtitle has-text-light">Moon</h2>
                <div class="moon" style="text-align: center">
                    <img src="img/moon/wi-moon-alt-@(Model.MoonPhaseDay[i]).svg" alt=""/>
                    @*                     @if (Model.MoonPhaseDay[i] == 16) *@
                    @*                     { *@
                    @*                         <img style="-webkit-transform: scaleX(-1);transform: scaleX(-1);" src="img/moon/wi-moon-alt-13.svg" alt=""/> *@
                    @*                     } *@

                </div>

                <div id="moontext">
                    @Model.MoonPhase[i] <strong class="has-text-light">@Model.MoonPhaseDay[i]</strong>
                    @if (!(Model.MoonPhaseDay[i] > 1))
                    {
                        <span>day old </span>
                    }
                    else
                    {
                        <span>days old </span>
                    }
                </div>
                <div class="columns is-mobile">
                    <div class="column is-half" id="RiseAndSet">
                        @if (!Model.MoonriseTimeLocal[i].IsNullOrWhiteSpace())
                        {
                            <span class="has-tooltip-arrow" data-tooltip="Moonrise time">@DateTime.Parse(Model.MoonriseTimeLocal[i]).ToString("HH:mm")</span>
                        }
                    </div>
                    <div class="column is-half" id="RiseAndSet">
                        @if (Model.MoonsetTimeLocal[i] != "")
                        {
                            <span class="has-tooltip-arrow" data-tooltip="Moonset time">@DateTime.Parse(Model.MoonsetTimeLocal[i]).ToString("HH:mm")</span>
                        }
                    </div>
                </div>

            </div>
        </div>
        i += 1;
    }

</div>