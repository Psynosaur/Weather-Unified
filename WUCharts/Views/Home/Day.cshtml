@using Newtonsoft.Json
@model List<WURequest.Models.Observations>
@{
    var latest = Model.LastOrDefault();
    // Sets nth record to use for plotting
    int nStep = 17;
    var graph = Model.Where((x, i) => i % nStep == 0);
    var graph2 = graph
        .Select(c =>
        {
            c.WindSpeedCur *= 3.6;
            c.WindGust10 *= 3.6;
            return c;
        });
    // int nStepRain = 100;
    // var graphrain = Model.Where((x, i) => i % nStepRain == 0);
    var lastestHour = 0;
    if (latest != null)
    {
        lastestHour = latest.ObsTime.ToLocalTime().Hour;
    }
}
@if (latest != null)
{
    <div class="containerx col-lg-12 col-md-12 col-sm-12 ">
        <div class="row">
            <div class="col-12" style="text-align: center">
                <h2 id="onselectTarget">Daily Stats</h2>
                <strong> @latest.ObsTime.ToLocalTime().ToString("dddd  dd MMM yyyy - HH:mm:ss zzz")</strong><br/>
                <input class="timepicker timepicker-with-dropdown text-center">
            </div>
        </div>

        @await Html.PartialAsync("_DoubleGraph", Model)
    </div>
    <script type="text/javascript">
            let hrs = 1;
            let modeldata = @Html.Raw(JsonConvert.SerializeObject(graph2));
            let lh = @lastestHour;
    </script>
    @await Html.PartialAsync("_timepicker")
    @await Html.PartialAsync("_scripts", Model)
}
else
{
    @await Html.PartialAsync("_error")
}
