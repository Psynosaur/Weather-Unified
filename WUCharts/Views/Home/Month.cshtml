@using Newtonsoft.Json
@model List<WURequest.Models.Observations>
@{
    var cnt = Model.Select(x => true).Count();
    var latest = Model.LastOrDefault();
    // Sets nth record to use for plotting
    int nStep = 527;
    if (cnt < 51000)
    {
        nStep = nStep / 4;
    }
    
    var graph = Model.Where((x, i) => i % nStep == 0);
    var graph2 = graph
        .Select(c =>
        {
            c.WindSpeedCur *= 3.6;
            c.WindGust10 *= 3.6;
            return c;
        });

    // int nStepRain = 100;
    // var graphrain = Model.Where((x, i) => i % nStepRain == 0);
}
<div class="containerx col-lg-12 col-md-12 col-sm-12 ">
    @if (latest != null)
    {
        <div class="row">
            <div class="col-12" style="text-align: center">
                <h2>Monthly Stats</h2>
                <strong>@latest.ObsTime.ToLocalTime().ToString("dddd dd MMM yyyy - HH:mm:ss zzz")</strong>
            </div>
        </div>

        <div class="row">
            @await Html.PartialAsync("_CurrentConditions", Model)
            @if (cnt > 0)
            {
                <div class="row col-lg" id="middle">
                    @await Html.PartialAsync("_TopBar", Model)
                    <div class="col-lg-12" id="graph">
                        <div class="col-lg" id="chartemp" style="height:300px;"></div>
                        <div class="col-lg" id="chartminmax" style="height:300px;"></div>
                        <div class="col-lg" id="charthum" style="height:300px;"></div>
                        <div class="col-lg" id="chartpressure" style="height:300px;"></div>
                        <div class="col-lg" id="chartwind" style="height:300px;"></div>
                        <div class="col-lg" id="chartrain" style="height:300px;"></div>
                        <div class="col-lg" id="chartsolar" style="height:300px;"></div>
                        <div class="col-lg" id="chartuv" style="height:300px;"></div>
                        <div class="col-lg" id="chartwd" style="height:300px;"></div>
                    </div>
                </div>
            }

            @await Html.PartialAsync("_Stats", Model)

        </div>

        <div class="row" style="text-align: center">
            <div class="col-lg">
                @cnt total records
            </div>
        </div>
        <script type="text/javascript">
            var hrs = 2;
            var pew = @nStep;
            var modeldata = @Html.Raw(JsonConvert.SerializeObject(graph2));
            // console.log("Step Size : " + pew);
        </script>
        @await Html.PartialAsync("_scripts", Model)
    }
    else
    {
        @await Html.PartialAsync("_error")
    }
</div>