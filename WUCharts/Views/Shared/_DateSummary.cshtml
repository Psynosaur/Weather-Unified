@model List<WURequest.Models.Observations>

@{
    var latest = Model.Last();
    var cnt = Model.Select(x => true).Count();
    DateTime sunrise = new DateTime();
    DateTime sunlightLatest = new DateTime();
    DateTime sunset = new DateTime();
    bool isSet = false;
    TimeSpan duration = new TimeSpan();
    @if (latest != null)
    {
        bool sun = Model.Any(x => x.SolarRad > 0);
        if (sun)
        {
            var daylight = Model.Where(x => x.SolarRad > 0).ToList();
            sunrise = daylight.Select(x => x.ObsTime).FirstOrDefault();
            sunlightLatest = daylight.Select(x => x.ObsTime).LastOrDefault();
            duration = sunlightLatest.Subtract(sunrise);
        }
        if (sun && (int) latest.SolarRad == 0 && sunlightLatest < latest.ObsTime)
        {
            sunset = sunlightLatest;
            isSet = true;
        }
    }
    double halfdisk = 0.26667;
    //var atmosRefrac = (0.83333);//0.34' for Refraction plus 0.16' for Half Disk (Alternate calculation)
    // https://www.ngdc.noaa.gov/geomag/calculators/magcalc.shtml -> get mag declination
    double magDeclinaion = 23.2;
    double lat = 33.864577;
    var declin = (magDeclinaion * Math.PI / 180);
    var numday = latest.ObsTime.DayOfYear;
    var elevat = declin * Math.Sin(Math.PI * 2 / 365 * (284 + numday)) / (Math.PI * 2) * 360 - (90 - lat);
    var secs = 1 / 3600;
    var radh = elevat * Math.PI / 180;
    var tanradh = Math.Tan(radh);
    var atmosRefrac = secs * (58.1 / tanradh - 0.07 / Math.Pow(tanradh, 3) + 0.000086 / Math.Pow(tanradh, 5));
    var finalEle = -(Math.Round(10 * (elevat + atmosRefrac + halfdisk)) / 10);
}

@section Scripts
{
    <script>
            var rise = '@sunrise.ToLocalTime()';
            var set = '@sunset.ToLocalTime()';
            var light = '@duration';
            console.log("Sunrise : " + rise);
            console.log("Sunset : " + set);
            console.log("Daylight : " + light);
    </script>
}

<div class="column is-2" id="second">
    <div class="card has-text-light">
        <div class="card-content ">
            <div class="media">
                <div class="media-content">
                    <p class="title has-text-light is-4">Rain</p>

                    <ul class="content">
                        <li class="list-group-item">Day<span style="float:right;">@latest.RainDay mm</span></li>
                        <li class="list-group-item">Previous Day<span style="float:right;">@latest.RainYest mm</span></li>
                        <li class="list-group-item">Month<span style="float:right;">@latest.RainMonth mm</span></li>
                        <li class="list-group-item">Year<span style="float:right;">@latest.RainYear mm</span></li>
                        @if (duration.Seconds > 0)
                        {
                            <p class="title has-text-light is-4">Sunlight</p>
                            <li class="list-group-item">Rise<span style="float:right;">@sunrise.ToLocalTime().ToString("HH:mm")</span></li>
                            @if (isSet)
                            {
                                <li class="list-group-item">Set<span style="float:right;">@sunset.ToLocalTime().ToString("HH:mm")</span></li>
                            }
                            <li class="list-group-item">Total hours<span style="float:right;">@duration.ToString("g")</span></li>
                            <li class="list-group-item">Max Solar Elevation<span style="float:right;">@finalEleÂ°</span></li>
                        }
                    </ul>
                    <div class="media">
                        <div class="media-content">
                            <p class="subtitle has-text-light is-4 has-tooltip-arrow" data-tooltip="Summary of wind intensity and its direction">Wind Rose</p>
                            <ul class="list-group list-group-flush" id="windrose">
                            </ul>
                        </div>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>