@using WURequest.Models
@model List<Observations>
@using Microsoft.Extensions.Options
@inject IOptions<AppSettings> _appSettings
@{
    var latest = Model.LastOrDefault();
    var cnt = Model.Select(x => true).Count();
    System.Diagnostics.Debug.Assert(latest != null, nameof(latest) + " != null");
    var windObj = new
    {
        currWind = latest.WindSpeedCur * 3.6,
        currGust = latest.WindGust10 * 3.6,
        currWAvg = latest.WindAvgSpeedCur * 3.6,
        // maxWind = Model.Select(x => x.WindSpeedCur).ToList().Max() * 3.6,
        // minWind = Model.Select(x => x.WindSpeedCur).ToList().Min() * 3.6,
        // avgWind = Model.Select(x => x.WindSpeedCur).ToList().Average() * 3.6,
        // maxGust = Model.Select(x => x.WindGust10).ToList().Max()
        // minGust = Model.Select(x => x.WindGust10).ToList().Min() * 3.6,
        // avgGust = Model.Select(x => x.WindGust10).ToList().Average() * 3.6,
    };
    double sd = 0.0;
    DateTime sunrise = new DateTime();
    DateTime sunlightLatest = new DateTime();
    DateTime sunset = new DateTime();
    bool isSet = false;
    TimeSpan duration = new TimeSpan();
    if (latest != null)
    {
        bool sun = Model.Any(x => x.SolarRad > 0);
        if (sun)
        {
            var daylight = Model.Where(x => x.SolarRad > 0).ToList();
            sunrise = daylight.Select(x => x.ObsTime).FirstOrDefault();
            sunlightLatest = daylight.Select(x => x.ObsTime).LastOrDefault();
            duration = sunlightLatest.Subtract(sunrise);
            var query = daylight.Select(x => x.SolarRad);
            IEnumerable<double> sunlight = query.ToList();
            double avg = sunlight.Average();
            double sumOfSquaresOfDifferences = sunlight.ToList().Select(val => (val - avg) * (val - avg)).Sum();
            sd = Math.Sqrt(sumOfSquaresOfDifferences / sunlight.Count());
        }
        if (sun && (int) latest.SolarRad == 0 && sunlightLatest < latest.ObsTime)
        {
            sunset = sunlightLatest;
            isSet = true;
        }
    }
    // Calculate max solar elevation at station
    double halfdisk = 0.26667;
    // var atmosRefrac = (0.83333);
    // 0.34' for Refraction plus 0.16' for Half Disk (Alternate calculation)
    // https://www.ngdc.noaa.gov/geomag/calculators/magcalc.shtml -> get mag declination
    double magDeclinaion = _appSettings.Value.MagneticDeclination;
    double lat = Math.Abs(_appSettings.Value.Lat);
    var declin = (magDeclinaion * Math.PI / 180);
    var numday = latest.ObsTime.DayOfYear;
    var elevat = declin * Math.Sin(Math.PI * 2 / 365 * (284 + numday)) / (Math.PI * 2) * 360 - (90 - lat);
    var secs = 1 / 3600;
    var radh = elevat * Math.PI / 180;
    var tanradh = Math.Tan(radh);
    var atmosRefrac = secs * (58.1 / tanradh - 0.07 / Math.Pow(tanradh, 3) + 0.000086 / Math.Pow(tanradh, 5));
    var finalEle = -(Math.Round(10 * (elevat + atmosRefrac + halfdisk)) / 10);

}
<div class="column is-2" id="first">
    <div class="card has-text-light">
        <div class="card-content">
            <div class="media">
                <div class="media-content">
                    <ul class="content">
                        <p class="subtitle has-text-light is-4">Outdoor</p>
                        <li class="list-group-item">Temp<span style="float:right;">@latest.TempOutCur &#176C</span></li>
                        <li class="list-group-item">Temp Min<span style="float:right;">@latest.Tmin &#176C</span></li>
                        <li class="list-group-item">Temp Max<span style="float:right;">@latest.Tmax &#176C</span></li>
                        <li class="list-group-item">R.H.<span style="float:right;">@latest.HumOutCur%</span></li>
                        <li class="list-group-item">Dew Point<span style="float:right;">@latest.DewCur &#176C</span></li>
                        <p class="subtitle has-text-light is-4">Wind</p>
                        <li class="list-group-item">Direction<span style="float:right;">@latest.WindDirCur&#176 / @latest.WindDirCurEng</span></li>
                        <li class="list-group-item">Direction Avg<span style="float:right;">@latest.WindDirAvg10&#176 / @latest.WindDirAvg10Eng</span></li>
                        <li class="list-group-item">Chill<span style="float:right;">@latest.WindChillCur &#176C</span></li>
                        <p class="subtitle has-text-light is-4">Speed</p>
                        <li class="list-group-item">Current<span style="float:right;">@(windObj.currWind > 0 ? windObj.currWind.ToString("0.00") : "0") km/h</span></li>
                        <li class="list-group-item">Average<span style="float:right;">@(windObj.currWAvg > 0 ? windObj.currWAvg.ToString("0.00") : "0") km/h</span></li>
                        <li class="list-group-item">Gust<span style="float:right;">@(windObj.currGust > 0 ? windObj.currGust.ToString("0.00") : "0") km/h</span></li>
                        @if (duration.Seconds > 0 && cnt < 5050 && cnt > 210)
                        {
                            <p class="subtitle has-text-light is-4">Sunlight</p>
                            <li class="list-group-item">Rise<span style="float:right;">@sunrise.ToLocalTime().ToString("HH:mm")</span></li>
                            @if (isSet)
                            {
                                <li class="list-group-item">Set<span style="float:right;">@sunset.ToLocalTime().ToString("HH:mm")</span></li>
                            }
                            <li class="list-group-item">Total hours<span style="float:right;">@duration.ToString("g")</span></li>
                            <li class="list-group-item">Max Solar Elevation<span style="float:right;">@finalEleÂ°</span></li>
                        }
                    </ul>
                    @if (Model.Any(obs => obs.WindSpeedCur > 0))
                    {
                        <div class="media">
                            <div class="media-content">
                            
                                <p class="subtitle has-text-light is-4 has-tooltip-arrow" data-tooltip="Summary of wind intensity and its direction">Wind Rose</p>
                                <ul class="list-group list-group-flush" id="windrose">
                                </ul>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div id="windrose" hidden></div>
                    }
                </div>
            </div>
        </div>

    </div>
</div>